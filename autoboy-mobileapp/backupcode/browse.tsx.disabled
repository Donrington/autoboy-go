import { useMemo, useState, useEffect } from 'react';
import { View, Text, StyleSheet, TextInput, ScrollView, TouchableOpacity, ImageBackground, Dimensions, Animated } from 'react-native';
import { colors, commonStyles } from '../../styles/commonStyles';
import { products, categories } from '../../data/products';
import ProductGrid from '../../components/ProductGrid';
import FiltersBottomSheet from '../../components/FiltersBottomSheet';
import WishlistButton from '../../components/WishlistButton';
import RatingStars from '../../components/RatingStars';
import { Ionicons } from '@expo/vector-icons';
import { LinearGradient } from 'expo-linear-gradient';
import * as Haptics from 'expo-haptics';

const { width, height } = Dimensions.get('window');

export default function BrowseScreen() {
  const [query, setQuery] = useState('');
  const [openFilters, setOpenFilters] = useState(false);
  const [activeCategory, setActiveCategory] = useState<string>('All');
  const [currentBgIndex, setCurrentBgIndex] = useState(0);
  const fadeAnim = new Animated.Value(1);
  const slideAnim = new Animated.Value(0);
  
  const heroBackgrounds = [
    'https://images.unsplash.com/photo-1593642632823-8f785ba67e45?w=800&h=600&fit=crop&q=80',
    'https://images.unsplash.com/photo-1526738549149-8e07eca6c147?w=800&h=600&fit=crop&q=80',
    'https://images.unsplash.com/photo-1468495244123-6c6c332eeece?w=800&h=600&fit=crop&q=80',
    'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=800&h=600&fit=crop&q=80'
  ];
  
  useEffect(() => {
    Animated.sequence([
      Animated.timing(slideAnim, {
        toValue: 1,
        duration: 800,
        useNativeDriver: true,
      }),
    ]).start();
    
    const interval = setInterval(() => {
      setCurrentBgIndex((prev) => (prev + 1) % heroBackgrounds.length);
    }, 5000);
    
    return () => clearInterval(interval);
  }, []);

  const filtered = useMemo(() => {
    const byQuery = products.filter(p => {
      const q = query.trim().toLowerCase();
      if (!q) return true;
      return p.title.toLowerCase().includes(q) || p.category.toLowerCase().includes(q);
    });
    const byCat = activeCategory === 'All' ? byQuery : byQuery.filter(p => p.category === activeCategory);
    return byCat;
  }, [query, activeCategory]);

  return (
    <ScrollView style={commonStyles.container} showsVerticalScrollIndicator={false}>
      {/* Hero Section */}
      <View style={styles.heroContainer}>
        <ImageBackground
          source={{ uri: heroBackgrounds[currentBgIndex] }}
          style={styles.heroBackground}
          imageStyle={styles.heroImage}
        >
          <LinearGradient
            colors={['rgba(0,0,0,0.4)', 'rgba(34,197,94,0.3)', 'rgba(0,0,0,0.7)']}
            style={styles.heroGradient}
          >
            <Animated.View style={[
              styles.heroContent,
              {
                opacity: slideAnim,
                transform: [{
                  translateY: slideAnim.interpolate({
                    inputRange: [0, 1],
                    outputRange: [50, 0]
                  })
                }]
              }
            ]}>
              <Text style={styles.heroSubtitle}>Welcome to the Future</Text>
              <Text style={styles.heroTitle}>
                Discover the Future of{' '}
                <Text style={styles.heroTitleGradient}>Gadget Trading</Text>
              </Text>
              <Text style={styles.heroDescription}>
                Explore our curated selection of the latest gadgets and unbeatable deals
              </Text>
              
              <View style={styles.heroButtons}>
                <TouchableOpacity 
                  style={styles.heroBtnPrimary}
                  onPress={() => Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium)}
                >
                  <Text style={styles.heroBtnPrimaryText}>Shop Now</Text>
                </TouchableOpacity>
                <TouchableOpacity 
                  style={styles.heroBtnSecondary}
                  onPress={() => Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light)}
                >
                  <Text style={styles.heroBtnSecondaryText}>Explore</Text>
                </TouchableOpacity>
              </View>
            </Animated.View>
          </LinearGradient>
        </ImageBackground>
      </View>
      
      {/* Products Section */}
      <View style={styles.productsSection}>
        <View style={styles.topRow}>
          <Text style={styles.heading}>All Products</Text>
          <TouchableOpacity style={styles.sortBtn} onPress={() => setOpenFilters(true)}>
            <Ionicons name="options-outline" size={18} color={colors.text} />
            <Text style={styles.sortText}>Filters</Text>
          </TouchableOpacity>
        </View>

      <View style={styles.searchRow}>
        <Ionicons name="search" size={18} color={colors.muted} />
        <TextInput
          placeholder="Search all products"
          placeholderTextColor={colors.muted}
          style={styles.searchInput}
          value={query}
          onChangeText={setQuery}
        />
      </View>

      <ScrollView horizontal showsHorizontalScrollIndicator={false} contentContainerStyle={styles.catRow}>
        {['All', ...categories].map(c => (
          <TouchableOpacity
            key={c}
            onPress={() => setActiveCategory(c)}
            style={[styles.pill, activeCategory === c && styles.pillActive]}
          >
            <Text style={[styles.pillText, activeCategory === c && styles.pillTextActive]}>{c}</Text>
          </TouchableOpacity>
        ))}
      </ScrollView>

        <View style={{ paddingHorizontal: 16, flex: 1 }}>
          <ProductGrid products={filtered} />
        </View>
      </View>

      <FiltersBottomSheet open={openFilters} onClose={() => setOpenFilters(false)} />
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  heroContainer: {
    height: height * 0.6,
    width: width,
  },
  heroBackground: {
    flex: 1,
    width: '100%',
    height: '100%',
  },
  heroImage: {
    resizeMode: 'cover',
  },
  heroGradient: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 20,
  },
  heroContent: {
    alignItems: 'center',
    maxWidth: 350,
  },
  heroSubtitle: {
    fontSize: 16,
    color: colors.primary,
    fontWeight: '600',
    marginBottom: 8,
    textAlign: 'center',
    fontStyle: 'italic',
  },
  heroTitle: {
    fontSize: 32,
    fontWeight: '800',
    color: 'white',
    textAlign: 'center',
    marginBottom: 12,
    lineHeight: 38,
    textTransform: 'uppercase',
    letterSpacing: -1,
  },
  heroTitleGradient: {
    color: colors.primary,
  },
  heroDescription: {
    fontSize: 16,
    color: 'rgba(255,255,255,0.9)',
    textAlign: 'center',
    marginBottom: 32,
    lineHeight: 22,
    fontWeight: '400',
  },
  heroButtons: {
    flexDirection: 'row',
    gap: 16,
    width: '100%',
    justifyContent: 'center',
  },
  heroBtnPrimary: {
    backgroundColor: colors.primary,
    paddingHorizontal: 32,
    paddingVertical: 16,
    borderRadius: 50,
    flex: 1,
    maxWidth: 140,
    shadowColor: colors.primary,
    shadowOffset: { width: 0, height: 8 },
    shadowOpacity: 0.3,
    shadowRadius: 16,
    elevation: 8,
  },
  heroBtnPrimaryText: {
    color: 'white',
    fontWeight: '700',
    fontSize: 16,
    textAlign: 'center',
    textTransform: 'uppercase',
    letterSpacing: 0.5,
  },
  heroBtnSecondary: {
    backgroundColor: 'rgba(255,255,255,0.2)',
    paddingHorizontal: 32,
    paddingVertical: 16,
    borderRadius: 50,
    borderWidth: 2,
    borderColor: 'rgba(255,255,255,0.3)',
    flex: 1,
    maxWidth: 140,
  },
  heroBtnSecondaryText: {
    color: 'white',
    fontWeight: '700',
    fontSize: 16,
    textAlign: 'center',
    textTransform: 'uppercase',
    letterSpacing: 0.5,
  },
  productsSection: {
    flex: 1,
    backgroundColor: colors.background,
    borderTopLeftRadius: 24,
    borderTopRightRadius: 24,
    marginTop: -24,
    paddingTop: 24,
  },
  topRow: {
    paddingHorizontal: 16,
    paddingTop: 12,
    paddingBottom: 6,
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center',
  },
  heading: {
    color: colors.text,
    fontSize: 20,
    fontWeight: '700',
  },
  sortBtn: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 6,
    backgroundColor: colors.backgroundAlt,
    borderRadius: 10,
    borderWidth: 1,
    borderColor: colors.border,
    paddingHorizontal: 10,
    paddingVertical: 8,
  },
  sortText: { color: colors.text, fontWeight: '600' },
  searchRow: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 8,
    paddingHorizontal: 16,
    paddingTop: 6,
  },
  searchInput: {
    flex: 1,
    backgroundColor: colors.surface,
    borderRadius: 10,
    paddingHorizontal: 12,
    paddingVertical: 10,
    borderWidth: 1,
    borderColor: colors.border,
    color: colors.text,
  },
  catRow: {
    paddingHorizontal: 16,
    paddingVertical: 12,
    gap: 8,
  },
  pill: {
    paddingHorizontal: 12,
    paddingVertical: 8,
    borderRadius: 999,
    backgroundColor: colors.backgroundAlt,
    borderWidth: 1,
    borderColor: colors.border,
  },
  pillActive: {
    backgroundColor: colors.primarySoft,
    borderColor: colors.primary,
  },
  pillText: {
    color: colors.muted,
  },
  pillTextActive: {
    color: colors.primary,
    fontWeight: '700',
  },
});
