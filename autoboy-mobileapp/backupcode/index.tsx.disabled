import { useEffect, useState } from 'react';
import { 
  View, 
  Text, 
  StyleSheet, 
  ScrollView, 
  TouchableOpacity, 
  ImageBackground, 
  Dimensions, 
  Animated,
  StatusBar
} from 'react-native';
import { colors, commonStyles } from '../../styles/commonStyles';
import { products, categories } from '../../data/products';
import { Ionicons } from '@expo/vector-icons';
import { LinearGradient } from 'expo-linear-gradient';
import * as Haptics from 'expo-haptics';
import ProductCard from '../../components/ProductCard';
import { router } from 'expo-router';

const { width, height } = Dimensions.get('window');

export default function HomeScreen() {
  const [currentBgIndex, setCurrentBgIndex] = useState(0);
  const fadeAnim = new Animated.Value(0);
  const slideAnim = new Animated.Value(0);
  const scaleAnim = new Animated.Value(0.8);

  const heroBackgrounds = [
    'https://images.unsplash.com/photo-1593642632823-8f785ba67e45?w=800&h=600&fit=crop&q=80',
    'https://images.unsplash.com/photo-1526738549149-8e07eca6c147?w=800&h=600&fit=crop&q=80',
    'https://images.unsplash.com/photo-1468495244123-6c6c332eeece?w=800&h=600&fit=crop&q=80',
    'https://images.unsplash.com/photo-1505740420928-5e560c06d30e?w=800&h=600&fit=crop&q=80'
  ];

  const featuredCategories = [
    { id: 'smartphones', name: 'Smartphones', icon: 'phone-portrait-outline', count: '2.5k+', color: colors.primary },
    { id: 'laptops', name: 'Laptops', icon: 'laptop-outline', count: '1.2k+', color: colors.primaryGlow },
    { id: 'tablets', name: 'Tablets', icon: 'tablet-portrait-outline', count: '800+', color: colors.primaryLight },
    { id: 'audio', name: 'Audio', icon: 'headset-outline', count: '1.5k+', color: colors.primaryDark },
  ];

  const trendingProducts = products.slice(0, 6);

  useEffect(() => {
    // Entrance animations
    Animated.parallel([
      Animated.timing(fadeAnim, {
        toValue: 1,
        duration: 1000,
        useNativeDriver: true,
      }),
      Animated.timing(slideAnim, {
        toValue: 1,
        duration: 800,
        useNativeDriver: true,
      }),
      Animated.spring(scaleAnim, {
        toValue: 1,
        tension: 50,
        friction: 7,
        useNativeDriver: true,
      }),
    ]).start();

    // Background slideshow
    const interval = setInterval(() => {
      setCurrentBgIndex((prev) => (prev + 1) % heroBackgrounds.length);
    }, 5000);

    return () => clearInterval(interval);
  }, []);

  const handleShopNow = () => {
    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Medium);
    router.push('/(tabs)/browse');
  };

  const handleCategoryPress = (categoryId: string) => {
    Haptics.impactAsync(Haptics.ImpactFeedbackStyle.Light);
    router.push(`/(tabs)/browse?category=${categoryId}`);
  };

  return (
    <View style={commonStyles.container}>
      <StatusBar barStyle="light-content" />
      
      <ScrollView 
        style={styles.scrollView} 
        showsVerticalScrollIndicator={false}
        bounces={true}
      >
        {/* Hero Section */}
        <View style={styles.heroContainer}>
          <ImageBackground
            source={{ uri: heroBackgrounds[currentBgIndex] }}
            style={styles.heroBackground}
            imageStyle={styles.heroImage}
          >
            <LinearGradient
              colors={['rgba(0,0,0,0.3)', 'rgba(34,197,94,0.2)', 'rgba(0,0,0,0.8)']}
              style={styles.heroGradient}
            >
              <Animated.View style={[
                styles.heroContent,
                {
                  opacity: fadeAnim,
                  transform: [
                    {
                      translateY: slideAnim.interpolate({
                        inputRange: [0, 1],
                        outputRange: [50, 0]
                      })
                    },
                    { scale: scaleAnim }
                  ]
                }
              ]}>
                <Text style={styles.heroSubtitle}>Welcome to the Future</Text>
                <Text style={styles.heroTitle}>
                  Discover the Future of{'\n'}
                  <Text style={styles.heroTitleGradient}>Gadget Trading</Text>
                </Text>
                <Text style={styles.heroDescription}>
                  Explore our curated selection of the latest gadgets and unbeatable deals. 
                  Join a community where buying, selling, and swapping electronics is seamless.
                </Text>
                
                <View style={styles.heroButtons}>
                  <TouchableOpacity 
                    style={styles.heroBtnPrimary}
                    onPress={handleShopNow}
                    activeOpacity={0.8}
                  >
                    <LinearGradient
                      colors={[colors.primary, colors.primaryDark]}
                      style={styles.gradientButton}
                    >
                      <Text style={styles.heroBtnPrimaryText}>Shop Now</Text>
                      <Ionicons name="arrow-forward" size={18} color="white" />
                    </LinearGradient>
                  </TouchableOpacity>
                  
                  <TouchableOpacity 
                    style={styles.heroBtnSecondary}
                    onPress={() => router.push('/(tabs)/sell-swap')}
                    activeOpacity={0.8}
                  >
                    <Text style={styles.heroBtnSecondaryText}>Start Selling</Text>
                  </TouchableOpacity>
                </View>
              </Animated.View>
            </LinearGradient>
          </ImageBackground>
        </View>

        {/* Categories Section */}
        <View style={styles.categoriesSection}>
          <View style={styles.sectionHeader}>
            <View>
              <Text style={styles.sectionLabel}>
                <Ionicons name="grid-outline" size={14} color="white" /> CATEGORIES
              </Text>
              <Text style={styles.sectionTitle}>
                Shop by{'\n'}
                <Text style={styles.sectionTitleHighlight}>Category</Text>
              </Text>
            </View>
            <TouchableOpacity style={styles.viewAllBtn}>
              <Text style={styles.viewAllText}>View All</Text>
              <Ionicons name="chevron-forward" size={16} color={colors.primary} />
            </TouchableOpacity>
          </View>

          <ScrollView 
            horizontal 
            showsHorizontalScrollIndicator={false}
            contentContainerStyle={styles.categoriesScroll}
          >
            {featuredCategories.map((category, index) => (
              <TouchableOpacity
                key={category.id}
                style={[styles.categoryCard, { backgroundColor: `${category.color}15` }]}
                onPress={() => handleCategoryPress(category.id)}
                activeOpacity={0.8}
              >
                <View style={[styles.categoryIcon, { backgroundColor: `${category.color}20` }]}>
                  <Ionicons name={category.icon as any} size={32} color={category.color} />
                </View>
                <Text style={styles.categoryName}>{category.name}</Text>
                <Text style={styles.categoryCount}>{category.count} items</Text>
                <View style={[styles.categoryAccent, { backgroundColor: category.color }]} />
              </TouchableOpacity>
            ))}
          </ScrollView>
        </View>

        {/* Trending Section */}
        <View style={styles.trendingSection}>
          <View style={styles.sectionHeader}>
            <View>
              <Text style={styles.sectionLabel}>
                <Ionicons name="trending-up-outline" size={14} color="white" /> TRENDING
              </Text>
              <Text style={styles.sectionTitle}>
                Hot{'\n'}
                <Text style={styles.sectionTitleHighlight}>Deals</Text>
              </Text>
            </View>
            <TouchableOpacity style={styles.viewAllBtn}>
              <Text style={styles.viewAllText}>View All</Text>
              <Ionicons name="chevron-forward" size={16} color={colors.primary} />
            </TouchableOpacity>
          </View>

          <View style={styles.productsGrid}>
            {trendingProducts.map((product, index) => (
              <View key={product.id} style={styles.productCardWrapper}>
                <ProductCard product={product} />
              </View>
            ))}
          </View>
        </View>

        {/* CTA Section */}
        <View style={styles.ctaSection}>
          <LinearGradient
            colors={[colors.backgroundAlt, colors.backgroundSecondary]}
            style={styles.ctaGradient}
          >
            <View style={styles.ctaContent}>
              <View style={styles.ctaLeft}>
                <Text style={styles.ctaTitle}>Ready to Start Trading?</Text>
                <Text style={styles.ctaDescription}>
                  Join thousands of users buying, selling, and swapping gadgets safely and securely.
                </Text>
                <View style={styles.ctaFeatures}>
                  <View style={styles.ctaFeature}>
                    <Ionicons name="shield-checkmark" size={20} color={colors.success} />
                    <Text style={styles.ctaFeatureText}>Secure Transactions</Text>
                  </View>
                  <View style={styles.ctaFeature}>
                    <Ionicons name="flash" size={20} color={colors.warning} />
                    <Text style={styles.ctaFeatureText}>Instant Messaging</Text>
                  </View>
                  <View style={styles.ctaFeature}>
                    <Ionicons name="star" size={20} color={colors.primary} />
                    <Text style={styles.ctaFeatureText}>Verified Sellers</Text>
                  </View>
                </View>
                <View style={styles.ctaButtons}>
                  <TouchableOpacity style={styles.ctaBtnPrimary} onPress={handleShopNow}>
                    <Text style={styles.ctaBtnPrimaryText}>Get Started</Text>
                  </TouchableOpacity>
                  <TouchableOpacity style={styles.ctaBtnSecondary}>
                    <Text style={styles.ctaBtnSecondaryText}>Learn More</Text>
                  </TouchableOpacity>
                </View>
              </View>
            </View>
          </LinearGradient>
        </View>
      </ScrollView>
    </View>
  );
}

const styles = StyleSheet.create({
  scrollView: {
    flex: 1,
  },
  heroContainer: {
    height: height * 0.7,
    width: width,
  },
  heroBackground: {
    flex: 1,
    width: '100%',
    height: '100%',
  },
  heroImage: {
    resizeMode: 'cover',
  },
  heroGradient: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    paddingHorizontal: 24,
  },
  heroContent: {
    alignItems: 'center',
    maxWidth: 380,
  },
  heroSubtitle: {
    fontSize: 16,
    color: colors.primaryLight,
    fontWeight: '600',
    marginBottom: 12,
    textAlign: 'center',
    fontStyle: 'italic',
    letterSpacing: 1,
  },
  heroTitle: {
    fontSize: 36,
    fontWeight: '800',
    color: 'white',
    textAlign: 'center',
    marginBottom: 16,
    lineHeight: 42,
    textTransform: 'uppercase',
    letterSpacing: -1,
  },
  heroTitleGradient: {
    color: colors.primary,
  },
  heroDescription: {
    fontSize: 16,
    color: 'rgba(255,255,255,0.9)',
    textAlign: 'center',
    marginBottom: 40,
    lineHeight: 24,
    fontWeight: '400',
  },
  heroButtons: {
    flexDirection: 'row',
    gap: 16,
    width: '100%',
    justifyContent: 'center',
  },
  heroBtnPrimary: {
    flex: 1,
    maxWidth: 160,
    borderRadius: 50,
    overflow: 'hidden',
  },
  gradientButton: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    gap: 8,
    paddingHorizontal: 24,
    paddingVertical: 16,
  },
  heroBtnPrimaryText: {
    color: 'white',
    fontWeight: '700',
    fontSize: 16,
    textTransform: 'uppercase',
    letterSpacing: 0.5,
  },
  heroBtnSecondary: {
    backgroundColor: 'rgba(255,255,255,0.15)',
    paddingHorizontal: 24,
    paddingVertical: 16,
    borderRadius: 50,
    borderWidth: 2,
    borderColor: 'rgba(255,255,255,0.3)',
    flex: 1,
    maxWidth: 160,
  },
  heroBtnSecondaryText: {
    color: 'white',
    fontWeight: '700',
    fontSize: 16,
    textAlign: 'center',
    textTransform: 'uppercase',
    letterSpacing: 0.5,
  },
  categoriesSection: {
    backgroundColor: colors.background,
    borderTopLeftRadius: 32,
    borderTopRightRadius: 32,
    marginTop: -32,
    paddingTop: 40,
    paddingBottom: 32,
  },
  sectionHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
    paddingHorizontal: 20,
    marginBottom: 24,
  },
  sectionLabel: {
    backgroundColor: colors.primary,
    color: 'white',
    fontSize: 12,
    fontWeight: '700',
    paddingHorizontal: 12,
    paddingVertical: 6,
    borderRadius: 20,
    textTransform: 'uppercase',
    letterSpacing: 1,
    marginBottom: 8,
  },
  sectionTitle: {
    fontSize: 32,
    fontWeight: '800',
    color: colors.text,
    lineHeight: 36,
    textTransform: 'uppercase',
    letterSpacing: -1,
  },
  sectionTitleHighlight: {
    color: colors.primary,
  },
  viewAllBtn: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 4,
    backgroundColor: colors.primarySoft,
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderRadius: 20,
    borderWidth: 1,
    borderColor: colors.primary,
  },
  viewAllText: {
    color: colors.primary,
    fontWeight: '700',
    fontSize: 14,
  },
  categoriesScroll: {
    paddingHorizontal: 20,
    gap: 16,
  },
  categoryCard: {
    width: 140,
    height: 160,
    borderRadius: 20,
    padding: 20,
    alignItems: 'center',
    justifyContent: 'center',
    position: 'relative',
    borderWidth: 1,
    borderColor: colors.border,
  },
  categoryIcon: {
    width: 64,
    height: 64,
    borderRadius: 32,
    alignItems: 'center',
    justifyContent: 'center',
    marginBottom: 12,
  },
  categoryName: {
    fontSize: 16,
    fontWeight: '700',
    color: colors.text,
    textAlign: 'center',
    marginBottom: 4,
  },
  categoryCount: {
    fontSize: 12,
    color: colors.muted,
    textAlign: 'center',
  },
  categoryAccent: {
    position: 'absolute',
    bottom: 0,
    left: 0,
    right: 0,
    height: 4,
    borderBottomLeftRadius: 20,
    borderBottomRightRadius: 20,
  },
  trendingSection: {
    paddingVertical: 32,
    backgroundColor: colors.background,
  },
  productsGrid: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    paddingHorizontal: 12,
    gap: 8,
  },
  productCardWrapper: {
    width: '48%',
  },
  ctaSection: {
    margin: 20,
    borderRadius: 24,
    overflow: 'hidden',
  },
  ctaGradient: {
    padding: 32,
  },
  ctaContent: {
    alignItems: 'center',
  },
  ctaLeft: {
    alignItems: 'center',
  },
  ctaTitle: {
    fontSize: 28,
    fontWeight: '800',
    color: colors.text,
    textAlign: 'center',
    marginBottom: 16,
    textTransform: 'uppercase',
    letterSpacing: -1,
  },
  ctaDescription: {
    fontSize: 16,
    color: colors.textSecondary,
    textAlign: 'center',
    marginBottom: 24,
    lineHeight: 24,
  },
  ctaFeatures: {
    alignItems: 'center',
    gap: 12,
    marginBottom: 32,
  },
  ctaFeature: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 12,
  },
  ctaFeatureText: {
    fontSize: 16,
    color: colors.text,
    fontWeight: '600',
  },
  ctaButtons: {
    flexDirection: 'row',
    gap: 16,
    width: '100%',
    justifyContent: 'center',
  },
  ctaBtnPrimary: {
    backgroundColor: colors.primary,
    paddingHorizontal: 32,
    paddingVertical: 16,
    borderRadius: 50,
    flex: 1,
    maxWidth: 160,
  },
  ctaBtnPrimaryText: {
    color: 'white',
    fontWeight: '700',
    fontSize: 16,
    textAlign: 'center',
    textTransform: 'uppercase',
  },
  ctaBtnSecondary: {
    backgroundColor: 'transparent',
    borderWidth: 2,
    borderColor: colors.primary,
    paddingHorizontal: 32,
    paddingVertical: 16,
    borderRadius: 50,
    flex: 1,
    maxWidth: 160,
  },
  ctaBtnSecondaryText: {
    color: colors.primary,
    fontWeight: '700',
    fontSize: 16,
    textAlign: 'center',
    textTransform: 'uppercase',
  },
});